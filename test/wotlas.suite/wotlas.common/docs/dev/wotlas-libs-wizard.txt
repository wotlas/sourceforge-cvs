
Conventions sur les propriétés des JWizardStepParameters
--------------------------------------------------------

  - propriétés d'initialisation du JWizardStep
         * commencent par "init."
         * sont indéxées ( "init.label0", "init.text0", ... ) à l'exception de "init.nbChoices"
           qui indique un nombre de choix multiple.

  - propriétés de retour des données du JWizardStep
         * commencent par "data."
         * reprennent leur "init." associé ( "init.text1"   -> "data.text1",
                                             "init.option0" -> "data.option0" )
         * pour les choix multiples l'indice sélectionné est placé dans "data.choice"
           Par exemple si l'utilisateur a sélectionné "init.choice3", "data.choice" contient "3"

  - propriétés de informations côté serveur
         * commencent par "server."
         * le nom d'une méthode associée à une donnée reprends le "init." associé
           ( "init.text0" -> "server.text0.method" )
         * pour les choix multiple on peut associer :
             -> une méthode                   ( "init.choice0" -> "server.choice0.method" )
             -> un lien vers le step suivant  ( "init.choice0" -> "server.choice0.next" )
         * pour signaler un lien par défaut pour le step :
             -> "server.next"
             -> "server.previous"
         * pour signaler une méthode à exécuter par défaut sur chaque "data.*"
             -> "server.method"
         * pour signaler une méthode à appeler pour remplacer une chaine de caractère :
             -> "server.text1.$MOTIF$" où "$MOTIF$" est le motif à chercher et remplacer ($ obligatoires)

Les méthodes de traitement de données ont le format : void setXxxx( String data ) throws AccountException
Les méthodes de remplacement de données ont le format : String getXxxxx() throws AccountException

Au final la syntaxe est ["init"|"data"|"server"] +
                        ["."] +
                        ["label"|"text"|"option"|"info"|"choice"|"nbChoices"|"next"|"previous"] +
                        [""|"<nb>"] +
                        [""|".method"|".next"|".$<motif>$"]

Champs / Méthodes rajoutées :
-----------------------------

  - Dans JWizardStep : 
        * Object lock  ->  pour le wait()
        * méthode awake() pour réveiller le JWizardStep
        * méthode await() pour bloquer le JWizardStep en attente (maximum 20 secondes).

  - Dans JWizard :
        * méthode awakeCurrentStep() pour réveiller le JWizardStep courant.

  - Dans JWizardStepParameters :
        * méthode getCopyWithNoInitProps() qui renvoie une copie de ton JWizardStepParameters.
          la copie retournée ne possède aucune propriété "init.*" ce qui est utile quand le client
          veut renvoyer des données au serveur, il ne surcharge pas le réseau des données "init.*"
          dont le serveur n'a que faire.

        * méthode getCopyWithNoServerProps() qui renvoie une copie de ton JWizardStepParameters.
          la copie retournée ne possède aucune propriété "server.*" ce qui évite au serveur de noyer
          le client sous un déluge de propriété qui lui sont inutiles.

  - dans tous les steps il y a désormais des méthodes pour récupérer les données
    (regarder en fin de classe).
    Exemples :
        JWizardStep2TextField  -> getText0() getText1()
        JWizardStepPassword    -> getLogin() getPassword()
        JWizardStepComboBox    -> getChoice()


Messages disponibles :
----------------------

  - AccountCreationMessage
        * Client -> Serveur
        * Signale au serveur qu'on est prêt à recevoir le premier step.
        * Message vide

  - AccountStepMessage
        * Client <-> Serveur
        * Contient les données d'initialisation/résultat.
        * Prends un objet JWizardStepParameters en paramètre du constructeur.
          Champs JWizardStepParameters 'parameters' protected.

  - PreviousStepMessage
        * Client -> Serveur
        * Pour signaler que l'on veut revenir au step précédent.
        * Message vide

  - CancelAccountCreationMessage
        * Client -> Serveur
        * Pour signaler l'annulation de la création du compte.
        * Message vide

  - StepErrorMessage
        * Client <- Serveur
        * Pour signaler une erreur dans les données envoyées que le client a envoyé
        * Contient un message d'information qui devrait être affiché dans un JOptionPane.
          Champs String 'info' protected.

  - AccountCreationEndedMessage
        * Client <- Serveur
        * Message final envoyé par le serveur pour signaler la fin du JWizard.
        * Message contenant le clientID et serverID (Server Original ID) comme champs protected.

